From 71be8f75ef580fc2b9503689eac971135d9ae4a9 Mon Sep 17 00:00:00 2001
From: Siena Richard <sienar@codeaurora.org>
Date: Mon, 23 Jan 2017 13:15:58 -0800
Subject: [PATCH] ASoC: msm: qdsp6v2: completely deallocate on cal block creation failure

Completely deallocate the cal block if creation fails to ensure no
memory leaks are present.

CRs-Fixed: 1112751
Change-Id: I76916c8b3f7e8e9b864dc39dab96f7d330774473
Signed-off-by: Siena Richard <sienar@codeaurora.org>
---

diff --git a/sound/soc/msm/qdsp6v2/audio_cal_utils.c b/sound/soc/msm/qdsp6v2/audio_cal_utils.c
index 3c4a70b..d1b0dff 100644
--- a/sound/soc/msm/qdsp6v2/audio_cal_utils.c
+++ b/sound/soc/msm/qdsp6v2/audio_cal_utils.c
@@ -535,7 +535,6 @@
 	}
 
 	INIT_LIST_HEAD(&cal_block->list);
-	list_add_tail(&cal_block->list, &cal_type->cal_blocks);
 
 	cal_block->map_data.ion_map_handle = basic_cal->cal_data.mem_handle;
 	if (basic_cal->cal_data.mem_handle > 0) {
@@ -567,6 +566,7 @@
 		goto err;
 	}
 	cal_block->buffer_number = basic_cal->cal_hdr.buffer_number;
+	list_add_tail(&cal_block->list, &cal_type->cal_blocks);
 	pr_debug("%s: created block for cal type %d, buf num %d, map handle %d, map size %zd paddr 0x%pK!\n",
 		__func__, cal_type->info.reg.cal_type,
 		cal_block->buffer_number,
@@ -576,6 +576,8 @@
 done:
 	return cal_block;
 err:
+	kfree(cal_block->cal_info);
+	kfree(cal_block->client_info);
 	kfree(cal_block);
 	cal_block = NULL;
 	return cal_block;
